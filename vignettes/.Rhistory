source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
library(d3po)
example(chord)
color.schemes = c("BrBG","PRGn","PiYG","PuOr","RdBu","RdGy","RdYlBu","RdYlGn","Spectral","Blues","Greens","Greys","Oranges","Purples","Reds","Turbo","Viridis","Inferno","Magma","Plasma","Cividis","Warm","Cool","CubehelixDefault","BuGn","BuPu","GnBu","OrRd","PuBuGn","PuBu","PuRd","RdPu","YlGnBu","YlGn","YlOrBr","YlOrRd","Rainbow","Sinebow")
setwd("~/git/d3po/R")
save(color.schemes, file = "color.schemes.RData")
source('~/git/d3po-scripts/1_document.R', echo=TRUE)
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
library(d3po)
example(chord)
x = data("color.schemes")
x
color.schemes
?color.schemes
source('~/git/d3po-scripts/1_document.R', echo=TRUE)
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
library(d3po)
rm(list = ls())
library(d3po)
example(chord)
data("color.schemes")
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
rm(list = ls())
library(d3po)
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
library(d3po)
environment()
environment()
data("color.schemes")
paste0(color.schemes, collapse = ", ")
cat(paste0(color.schemes, collapse = ", "))
cat(paste0(color.schemes, collapse = "\", \""))
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
library(d3po)
example(chord)
data(test)
color.schemes
setwd("~/git/d3po/R")
test = color.schemes
save(test, file = "test.RData")
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
library(d3po)
rm(list = ls())
labels = c("spam", "eggs", "foo", "bar")
df = data.frame(source = rep(labels, each = 4),
target = rep(labels, times = 4),
value = c(11975, 5871, 8916, 2868,
1951, 10048, 2060, 6171,
8010, 16145, 8090, 8045,
1013, 990, 940, 6907))
chord(df)
data(test)
color.schemes = test
setwd("~/git/d3po/R")
save(color.schemes, file = "color.schemes.RData")
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
library(d3po)
example(chord)
source('~/git/d3po-scripts/1_document.R', echo=TRUE)
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
source('~/git/d3po/R/chord.R', echo=TRUE)
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
library(d3po)
rm(list = ls())
example(chord)
example(chord)
source('~/git/d3po-scripts/1_document.R', echo=TRUE)
source('~/git/d3po-scripts/1_document.R', echo=TRUE)
data("color.schemes")
"Blues" %in% color.schemes
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
library(d3po)
example("choropleth.state")
example("choropleth.state")
choropleth.state(unemployment,
state.column = "name",
value.column = "rate",
legend.title = "Unemployment rate (%)")
choropleth.state(unemployment,
state.column = "name",
value.column = "rate",
legend.title = "Unemployment rate (%)", color.domain = "Spectral")
choropleth.state(unemployment,
state.column = "name",
value.column = "rate",
legend.title = "Unemployment rate (%)", color.scheme = "Spectral")
source('~/git/d3po/R/choropleth.state.R', echo=TRUE)
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
library(d3po)
rm(list = ls())
example("choropleth.state")
choropleth.state(unemployment,
state.column = "name",
value.column = "rate",
legend.title = "Unemployment rate (%)")
choropleth.state(unemployment,
state.column = "name",
value.column = "rate",
legend.title = "Unemployment rate (%)", color.scheme = "Spectral")
choropleth.state(unemployment,
state.column = "name",
value.column = "rate",
legend.title = "Unemployment rate (%)", color.scheme = "Spectral")
choropleth.state(unemployment,
state.column = "name",
value.column = "rate",
legend.title = "Unemployment rate (%)", color.scheme = "Spectral", color.domain = seq(min(unemployment$rate), max(unemployment$rate), length.out = 3))
choropleth.state(unemployment,
state.column = "name",
value.column = "rate",
legend.title = "Unemployment rate (%)", color.scheme = "Spectral", color.domain = seq(min(unemployment$rate), max(unemployment$rate), length.out = 5))
choropleth.state(unemployment,
state.column = "name",
value.column = "rate",
legend.title = "Unemployment rate (%)", color.scheme = "Spectral", color.domain = seq(min(unemployment$rate), max(unemployment$rate), length.out = 5))
choropleth.state(unemployment,
state.column = "name",
value.column = "rate",
legend.title = "Unemployment rate (%)", color.scheme = "Spectral", color.domain = seq(min(unemployment$rate), max(unemployment$rate), length.out = 5))
choropleth.state(unemployment,
state.column = "name",
value.column = "rate",
legend.title = "Unemployment rate (%)", color.scheme = "Spectral", color.domain = seq(min(unemployment$rate), max(unemployment$rate), length.out = 5))
seq(min(unemployment$rate), max(unemployment$rate), length.out = 5)
seq(min(unemployment$rate), max(unemployment$rate), length.out = 5)
choropleth.state(unemployment,
state.column = "name",
value.column = "rate",
legend.title = "Unemployment rate (%)", color.scheme = "Spectral", color.domain = seq(min(unemployment$rate), max(unemployment$rate), length.out = 5))
sprintf("%i%i%i", 1:3)
color.domain = seq(min(unemployment$rate), max(unemployment$rate), length.out = 5)
paste0("const colorDomain = [", paste0(color.domain, collapse = ", "), "];")
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
library(d3po)
example("choropleth.state")
choropleth.state(unemployment,
state.column = "name",
value.column = "rate",
legend.title = "Unemployment rate (%)", color.scheme = "Spectral", color.domain = seq(min(unemployment$rate), max(unemployment$rate), length.out = 5))
choropleth.state(unemployment,
state.column = "name",
value.column = "rate",
legend.title = "Unemployment rate (%)", color.scheme = "Spectral", color.domain = seq(min(unemployment$rate), max(unemployment$rate), length.out = 3))
choropleth.state(unemployment,
state.column = "name",
value.column = "rate",
legend.title = "Unemployment rate (%)", color.scheme = "Spectral", color.domain = seq(min(unemployment$rate), max(unemployment$rate), length.out = 100))
choropleth.state(unemployment,
state.column = "name",
value.column = "rate",
legend.title = "Unemployment rate (%)", color.scheme = "Spectral", color.domain = seq(min(unemployment$rate), max(unemployment$rate), length.out = 3))
choropleth.state(unemployment,
state.column = "name",
value.column = "rate",
legend.title = "Unemployment rate (%)", color.scheme = "Spectral", color.domain = seq(min(unemployment$rate), max(unemployment$rate), length.out = 2))
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
library(d3po)
example("choropleth.state")
choropleth.state(unemployment,
state.column = "name",
value.column = "rate",
legend.title = "Unemployment rate (%)", color.scheme = "Spectral", color.domain = seq(min(unemployment$rate), max(unemployment$rate), length.out = 2))
choropleth.state(unemployment,
state.column = "name",
value.column = "rate",
legend.title = "Unemployment rate (%)", color.scheme = "Spectral", color.domain = seq(min(unemployment$rate), max(unemployment$rate), length.out = 2))
choropleth.state(unemployment,
state.column = "name",
value.column = "rate",
legend.title = "Unemployment rate (%)", color.scheme = "Spectral", color.domain = seq(min(unemployment$rate), max(unemployment$rate), length.out = 3))
choropleth.state(unemployment,
state.column = "name",
value.column = "rate",
legend.title = "Unemployment rate (%)", color.scheme = "Spectral", color.domain = seq(min(unemployment$rate), max(unemployment$rate), length.out = 3))
choropleth.state(unemployment,
state.column = "name",
value.column = "rate",
legend.title = "Unemployment rate (%)", color.scheme = "Spectral", color.domain = seq(min(unemployment$rate), max(unemployment$rate), length.out = 5))
choropleth.state(unemployment,
state.column = "name",
value.column = "rate",
legend.title = "Unemployment rate (%)", color.scheme = "Spectral", color.domain = seq(min(unemployment$rate), max(unemployment$rate), length.out = 100))
source('~/git/d3po-scripts/1_document.R', echo=TRUE)
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
rm(list = ls())
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
install.packages(c("backports", "circlize", "dplyr", "ellipsis", "ggplot2", "git2r", "GlobalOptions", "glue", "htmltools", "later", "maptools", "pillar", "pkgbuild", "pkgload", "promises", "rgdal", "rversions", "scales", "sf", "sp", "StanHeaders", "tidyr", "units", "vctrs", "xfun"))
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
library(d3po)
example(cloud)
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
library(d3po)
example(cloud)
cloud(df, color.scheme = "Blues")
source('~/git/d3po-scripts/1_document.R', echo=TRUE)
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
library(d3po)
?marimekko
example(marimekko)
source('~/git/d3po-scripts/1_document.R', echo=TRUE)
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
install.packages("htmltools")
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
library(d3po)
example(marimekko)
sales
marimekko(sales, x.column = "market", y.column = "segment", color.scheme = "Blues")
source('~/git/d3po-scripts/1_document.R', echo=TRUE)
source('~/git/d3po-scripts/1_document.R', echo=TRUE)
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
library(d3po)
example(sankey)
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
library(d3po)
example(sankey)
sankey(energy, color.scheme = "Blues")
help(package = "d3po")
df = data.frame(source = rep(labels, each = 4),
target = rep(labels, times = 4),
value = c(11975, 5871, 8916, 2868,
1951, 10048, 2060, 6171,
8010, 16145, 8090, 8045,
1013, 990, 940, 6907))
labels = c("spam", "eggs", "foo", "bar")
df = data.frame(source = rep(labels, each = 4),
target = rep(labels, times = 4),
value = c(11975, 5871, 8916, 2868,
1951, 10048, 2060, 6171,
8010, 16145, 8090, 8045,
1013, 990, 940, 6907))
adjacency.matrix = df.to.adjacency(df)
m = matrix(0, nrow = nrow(adjacency.matrix), ncol = ncol(adjacency.matrix))
m[adjacency.matrix != 0] = 1
adjacency.matrix = df.to.adjacency(df)$matrix
m = matrix(0, nrow = nrow(adjacency.matrix), ncol = ncol(adjacency.matrix))
m[adjacency.matrix != 0] = 1
m
example("choropleth.state")
?choropleth.state
d3 = choropleth.state(unemployment,
state.column = "name",
value.column = "rate",
legend.title = "Unemployment rate (%)")
save.d3(d3)
save.d3(d3, "test.png")
getwd()
choropleth.state(unemployment,
state.column = "name",
value.column = "rate")
choropleth.state(unemployment,
state.column = "name",
value.column = "rate", color.scheme = "Spectral")
choropleth.state(unemployment,
state.column = "name",
value.column = "rate", color.scheme = "Spectral")
example("choropleth.state")
source('~/git/d3po-scripts/1_document.R', echo=TRUE)
source('~/git/d3po-scripts/1_document.R', echo=TRUE)
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
load(unemployment)
data(unemployment)
library(d3po)
data(unemployment)
unemployment
unemployment.state = unemployment
setwd("~/git/d3po/inst/js")
save(unemployment.state, file = "unemployment.state.RData")
state.name
?state.abb
datasets::state.abb
datasets::state.name
setwd("~/git/d3po/R")
rm(list = ls())
unemployment.county = read.csv("unemployment-x.csv")
head(unemployment.county)
save(unemployment.county, file = "unemployment.county.RData")
us.counties = unemployment.county[,-4]
us.counties
save(us.counties, file = "us.counties.RData")
unemployment.county
head(unemployment.county)
source('~/git/d3po-scripts/1_document.R', echo=TRUE)
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
library(d3po)
example("choropleth.county")
source('~/git/d3po-scripts/1_document.R', echo=TRUE)
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
library(d3po)
source('~/git/d3po-scripts/1_document.R', echo=TRUE)
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
library(d3po)
example("choropleth.county")
source('~/git/d3po-scripts/1_document.R', echo=TRUE)
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
library(d3po)
example("choropleth.county")
example("choropleth.county")
example("choropleth.county")
example("choropleth.county")
r2d3::r2d3("~/R/win-library/4.0/d3po/js/choropleth.county.js", data = list(values = unemployment, shape = jsonlite::read_json("map_data/state.json")), dependencies = c("topojson-client/dist/topojson-client.js"))
r2d3::r2d3("~/R/win-library/4.0/d3po/js/choropleth.county.js", data = list(values = unemployment, shape = jsonlite::read_json("map_data/state.json")), dependencies = c("topojson-client/dist/topojson-client.js"))
example("choropleth.county")
example("choropleth.county")
example("choropleth.county")
example("choropleth.county")
example("choropleth.county")
example("choropleth.county")
head(us.counties)
summary(us.counties$id)
rm(list = ls())
setwd("~/git/d3po/R")
unemployment.count = read.csv("unemployment-x.csv", colClasses = c("character", "character", "character", "numeric"))
unemployment.county = read.csv("unemployment-x.csv", colClasses = c("character", "character", "character", "numeric"))
rm(unemployment.count)
head(unemployment.county)
save(unemployment.county, file = "unemployment.county.RData")
source('~/git/d3po-scripts/1_document.R', echo=TRUE)
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
library(d3po)
example("choropleth.county")
example("choropleth.state")
r2d3::r2d3("~/R/win-library/4.0/d3po/js/choropleth.state.js", data = list(values = unemployment, shape = jsonlite::read_json("map_data/state.json")), dependencies = c("topojson-client/dist/topojson-client.js"))
r2d3::r2d3("~/R/win-library/4.0/d3po/js/choropleth.state.js", data = list(values = unemployment, shape = jsonlite::read_json("map_data/state.json")), dependencies = c("topojson-client/dist/topojson-client.js"))
example("choropleth.state")
example("choropleth.state")
example("choropleth.state")
example("choropleth.state")
example("choropleth.state")
example("choropleth.state")
example("choropleth.state")
example("choropleth.state")
r2d3::r2d3("~/R/win-library/4.0/d3po/js/choropleth.state.js", data = list(values = unemployment, shape = jsonlite::read_json("map_data/state.json")), dependencies = c("topojson-client/dist/topojson-client.js"))
example("choropleth.state")
example("choropleth.state")
example("choropleth.state")
example("choropleth.state")
example("choropleth.state")
example("choropleth.state")
r2d3::r2d3("~/R/win-library/4.0/d3po/js/choropleth.state.js", data = list(values = unemployment, shape = jsonlite::read_json("map_data/state.json")), dependencies = c("topojson-client/dist/topojson-client.js"))
example("choropleth.state")
example("choropleth.state")
example("choropleth.state")
source('~/git/d3po-scripts/1_document.R', echo=TRUE)
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
source('~/git/d3po-scripts/2_reinstall.R', echo=TRUE)
library(d3po)
example("choropleth.state")
example("choropleth.county")
knitr::opts_chunk$set(collapse = T,
comment = "#>",
fig.align = "center",
fig.width = 5)
options(tibble.print_min = 4L, tibble.print_max = 4L)
library(d3po)
set.seed(100)
knitr::opts_chunk$set(collapse = T,
comment = "#>",
fig.align = "center",
fig.width = 5)
options(tibble.print_min = 4L, tibble.print_max = 4L)
library(d3po)
set.seed(100)
knitr::opts_chunk$set(collapse = T,
comment = "#>",
fig.align = "center",
fig.width = 5)
options(tibble.print_min = 4L, tibble.print_max = 4L)
library(d3po)
set.seed(100)
help(package = "d3po")
adjacency.matrix = matrix(c(1, 1, 2,
1, 1, 3,
2, 3, 1),
nrow = 3, byrow = TRUE)
chord(adjacency.matrix = adjacency.matrix, labels = labels)
adjacency.matrix = matrix(c(0, 1, 2,
1, 0, 3,
2, 3, 0),
nrow = 3, byrow = TRUE)
unique(us.counties$state)
state.name
df.state = data.frame(state = c("District of Columbia", state.name),
value = rnorm(51))
require(dplyr)
df.county = us.counties %>%
mutate(value.county = rnorm(n()))
df.count
df.county
df.county = us.counties %>%
mutate(value.county = rnorm(n(), sd = 0.1)) %>%
left_join(df.state, by = "state")
df.county
df.state = data.frame(state = c("District of Columbia", state.name),
value.state = rnorm(51, sd = 3))
df.county = us.counties %>%
mutate(value.county = rnorm(n(), sd = 0.1)) %>%
left_join(df.state, by = "state")
head(df.county)
choropleth.state(df.state)
df.state = data.frame(state = c("District of Columbia", state.name),
value.state = rnorm(51, sd = 3))
choropleth.state(df.state)
choropleth.state(df.state, value.column = "value.state")
choropleth.county(df.county)
df.state = data.frame(state = c("District of Columbia", state.name),
value.state = rnorm(51, sd = 3))
df.county = us.counties %>%
mutate(value.county = rnorm(n(), sd = 0.1)) %>%
left_join(df.state, by = "state") %>%
mutate(value = value.state + value.county)
choropleth.county(df.county)
